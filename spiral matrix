#include<bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        int frow = 0, fcol = 0 , lrow = matrix.size()-1, lcol = matrix[matrix.size()-1].size()-1 ;
            
        vector<int>v;
            
        while(frow<=lrow && fcol<=lcol){
            
            for(int i = fcol; i<=lcol; i++){
                v.push_back(matrix[frow][i]);
            }
            
            frow++;
            
            for(int i =frow; i<=lrow; i++){
                
                v.push_back(matrix[i][lcol]);
            }
            
            lcol--;
            
            if(frow<lrow){
                
                for(int i = lcol; i>=fcol; i--){
                    v.push_back(matrix[lrow][i]);                    
                }
                
                lrow--;
            }
            
            if(fcol<lcol){
                
                for(int i = frow; i<=lrow; i++){
                    v.push_back(matrix[i][fcol]);
                }
                fcol++;
            }
        }
        
        return v;

    }
};

int main(){
    
    int n , m;

    cin>>n>>m;

    vector<vector<int>> v;

    for(int i = 0; i<n; i++){
        vector<int> v1;
        for(int j = 0; j<m; j++){
            int x;
            cin>>x;
            v1.push_back(x);
        }
        v.push_back(v1);
    }

    Solution s;

    vector<int> f = s.spiralOrder(v);

    cout<<"[";
    
    for(int i=0; i<f.size(); i++){
        cout<<f[i]<<",";
    }

    cout<<"]"<<endl;

    return 0;

}
