#include<bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        
//         vector<int>v;
        
//         sort(nums1.begin() , nums1.end());
//         sort(nums2.begin() , nums2.end());
        
//         for(int i=0, j = 0; i<nums1.size() && j<nums2.size();){
            
//             if(nums1[i]==nums2[j]){
//                 v.push_back(nums1[i]);
//                 i++;
//                 j++;
//             }
//             else if(nums1[i]>nums2[j])
//                 j++;
//             else
//                 i++;
//         }
        
        // return v;
        
        
        
        unordered_map<int, int> mm;
        
        for(int i = 0; i<nums1.size(); i++){
            mm[nums1[i]]++;
        }
        
        vector<int> v ;
        
        for(int i=0; i<nums2.size(); i++){
            
            if(mm.count(nums2[i]) && mm[nums2[i]]>0){
                v.push_back(nums2[i]);
                mm[nums2[i]]--;
                
            }
        }
        
        return v;
    }
};
    // }
// };

int main(){

	int n , m;

	cin>>n>>m;

	vector<int> v1;
	vector<int> v2;

	for(int i = 0; i<n; i++){
		int x;
		cin>>x;
		v1.push_back(x);
	}

	for(int i = 0; i<m; i++){
		int x;
		cin>>x;
		v2.push_back(x);
	}

	Solution s;

	vector<int> in = s.intersect(v1 , v2);

	for(int i = 0; i<in.size(); i++){
		cout<<in[i]<<"	";
	}

	return 0;
}
